<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anjo Vahldiek-Oberwagner on Anjo Vahldiek-Oberwagner</title>
    <link>https://vahldiek.github.io/</link>
    <description>Recent content in Anjo Vahldiek-Oberwagner on Anjo Vahldiek-Oberwagner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0700</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Swivel: Hardening WebAssembly against Spectre</title>
      <link>https://vahldiek.github.io/publication/narayan-2021/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 -0800</pubDate>
      
      <guid>https://vahldiek.github.io/publication/narayan-2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Privacy-Preserving Machine Learning in Untrusted Clouds Made Simple</title>
      <link>https://vahldiek.github.io/publication/lee-2020-ppml/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 -0700</pubDate>
      
      <guid>https://vahldiek.github.io/publication/lee-2020-ppml/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tutorial: Graphene: Confidential Computing for Unmodified Linux Applications</title>
      <link>https://vahldiek.github.io/publication/vahldiek-oberwagner-2020-secdev/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 -0700</pubDate>
      
      <guid>https://vahldiek.github.io/publication/vahldiek-oberwagner-2020-secdev/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Automatically Securing Linux Application Containers in Untrusted Clouds</title>
      <link>https://vahldiek.github.io/publication/vahldiek-2020-lss/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 -0700</pubDate>
      
      <guid>https://vahldiek.github.io/publication/vahldiek-2020-lss/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ERIM: Secure, Efficient In-Process Isolation with Memory Protection Keys</title>
      <link>https://vahldiek.github.io/publication/vahldiek-2018-erim/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 -0800</pubDate>
      
      <guid>https://vahldiek.github.io/publication/vahldiek-2018-erim/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Protecting Persistent Data</title>
      <link>https://vahldiek.github.io/project/guardat/</link>
      <pubDate>Sat, 15 Dec 2018 00:24:47 +0100</pubDate>
      
      <guid>https://vahldiek.github.io/project/guardat/</guid>
      <description>&lt;p&gt;In today’s systems, policies protecting stored data and mechanisms for their enforcement are spread across many software components, increasing the risk of violation due to bugs, vulnerabilities and misconfigurations. We suggest Guardat to addresses this problem. Users, developers and administrators specify file protection policies declaratively, concisely and separate from code, and Guardat enforces these policies by mediating I/O in the storage layer. Thus, policy enforcement relies only on the integrity of the Guardat controller and any external policy dependencies. The semantic gap between the storage layer enforcement and per-file policies is bridged using cryptographic attestations from Guardat. We show experimentally that the overhead is low.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Secure, Efficient In-Process Memory Isolation</title>
      <link>https://vahldiek.github.io/project/erim/</link>
      <pubDate>Sat, 15 Dec 2018 00:24:42 +0100</pubDate>
      
      <guid>https://vahldiek.github.io/project/erim/</guid>
      <description>&lt;p&gt;Isolating sensitive data and state can increase the security and robustness of
many applications. Applications, such as isolating cryptographic session keys in
a network-facing application or isolating frequently invoked native libraries in
managed runtimes, require very frequent domain switching. In such applications,
the overhead of kernel- or hypervisormediated domain switching is prohibitive.
We suggest LwCs and ERIM to overcome these costs using novel kernel
functionality and hardware-support (e.g., Intel MPK), respectively.&lt;/p&gt;

&lt;p&gt;Wasm has become a popular lightweight, in-process sandbox and is, for example,
used in production to isolate different clients on edge clouds and
function-as-a-service platforms. Unfortunately, Spectre attacks can bypass
Wasm’s isolation guarantees. Swivel hardens Wasm against this class of attacks
by ensuring that potentially malicious code can neither use Spectre attacks to
break out of the Wasm sandbox nor coerce victim code—another Wasm client or the
embedding process—to leak secret data. We suggest Swivel, a new compiler
framework for hardening WebAssembly (Wasm) against Spectre attacks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shielding Applications in an untrusted Cloud</title>
      <link>https://vahldiek.github.io/project/untrustedcloud/</link>
      <pubDate>Sat, 15 Dec 2018 00:24:42 +0100</pubDate>
      
      <guid>https://vahldiek.github.io/project/untrustedcloud/</guid>
      <description>&lt;p&gt;Computing on secret data is challenging with today’s cloud service provider
(CSP) offerings. CSP have full visibility into their client’s workloads and data
while run in a VM or container and shielding against other tenants. On the
contrary, confidential computing (CC) techniques (e.g., Intel Software Guard
Extension (SGX)) offer a reverse sandbox. These techniques shield the workload
and data from accesses by the underlying system software (e.g., OS or VMM) and
hardware attacks. Thus, preventing CSPs from accessing secrets. In addition, CC
provides remote attestation to verify the integrity of applications.&lt;/p&gt;

&lt;p&gt;Projects in this space focus on popular cloud deployment scenarios and automate
the process to deploy applications in confidential compute enclaves.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Techniques to Protect Confidentiality and Integrity of Persistent and In-Memory Data</title>
      <link>https://vahldiek.github.io/publication/vahldiek-2018-thesis/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 -0700</pubDate>
      
      <guid>https://vahldiek.github.io/publication/vahldiek-2018-thesis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pesos: Policy Enhanced Secure Object store</title>
      <link>https://vahldiek.github.io/publication/krahn-2018/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 -0700</pubDate>
      
      <guid>https://vahldiek.github.io/publication/krahn-2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Light-Weight Contexts: An OS Abstraction for Safety and Performance</title>
      <link>https://vahldiek.github.io/publication/litton-2016/</link>
      <pubDate>Sat, 01 Oct 2016 00:00:00 -0700</pubDate>
      
      <guid>https://vahldiek.github.io/publication/litton-2016/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Thoth : Comprehensive Policy Compliance in Data Retrieval Systems</title>
      <link>https://vahldiek.github.io/publication/elnikety-2016/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 -0800</pubDate>
      
      <guid>https://vahldiek.github.io/publication/elnikety-2016/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Guardat: Enforcing data policies at the storage layer</title>
      <link>https://vahldiek.github.io/publication/vahldiek-oberwagner-2015/</link>
      <pubDate>Fri, 17 Apr 2015 00:00:00 -0700</pubDate>
      
      <guid>https://vahldiek.github.io/publication/vahldiek-oberwagner-2015/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Protecting Data Integrity with Storage Leases</title>
      <link>https://vahldiek.github.io/publication/vahldiek-2011/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 -0700</pubDate>
      
      <guid>https://vahldiek.github.io/publication/vahldiek-2011/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A verifiedwireless safety critical hard real-time design</title>
      <link>https://vahldiek.github.io/publication/graf-2011-verifiedwireless/</link>
      <pubDate>Sat, 01 Jan 2011 00:00:00 -0800</pubDate>
      
      <guid>https://vahldiek.github.io/publication/graf-2011-verifiedwireless/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
