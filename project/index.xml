<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Anjo Vahldiek-Oberwagner</title>
    <link>https://vahldiek.github.io/project/</link>
    <description>Recent content in Projects on Anjo Vahldiek-Oberwagner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Tue, 05 Jul 2022 00:24:42 +0100</lastBuildDate>
    
	<atom:link href="https://vahldiek.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Research Artifacts and Evaluation</title>
      <link>https://vahldiek.github.io/project/artifact-eval/</link>
      <pubDate>Tue, 05 Jul 2022 00:24:42 +0100</pubDate>
      
      <guid>https://vahldiek.github.io/project/artifact-eval/</guid>
      <description>A scientific paper consists of a constellation of artifacts that extend beyond the document itself: software, hardware, evaluation data and documentation, raw survey results, mechanized proofs, models, test suites, benchmarks, and so on. In some cases, the quality of these artifacts is as important as that of the document itself.
My involvement in artifact evaluation efforts in the systems, security and HPC communities have led to a growing understanding of building reusable and reproducible artifacts.</description>
    </item>
    
    <item>
      <title>Protecting Persistent Data</title>
      <link>https://vahldiek.github.io/project/guardat/</link>
      <pubDate>Sat, 15 Dec 2018 00:24:47 +0100</pubDate>
      
      <guid>https://vahldiek.github.io/project/guardat/</guid>
      <description>In today’s systems, policies protecting stored data and mechanisms for their enforcement are spread across many software components, increasing the risk of violation due to bugs, vulnerabilities and misconfigurations. We suggest Guardat to addresses this problem. Users, developers and administrators specify file protection policies declaratively, concisely and separate from code, and Guardat enforces these policies by mediating I/O in the storage layer. Thus, policy enforcement relies only on the integrity of the Guardat controller and any external policy dependencies.</description>
    </item>
    
    <item>
      <title>Secure, Efficient In-Process Memory Isolation</title>
      <link>https://vahldiek.github.io/project/erim/</link>
      <pubDate>Sat, 15 Dec 2018 00:24:42 +0100</pubDate>
      
      <guid>https://vahldiek.github.io/project/erim/</guid>
      <description>Isolating sensitive data and state can increase the security and robustness of many applications. Applications, such as isolating cryptographic session keys in a network-facing application or isolating frequently invoked native libraries in managed runtimes, require very frequent domain switching. In such applications, the overhead of kernel- or hypervisormediated domain switching is prohibitive. We suggest LwCs and ERIM to overcome these costs using novel kernel functionality and hardware-support (e.g., Intel MPK), respectively.</description>
    </item>
    
    <item>
      <title>Shielding Applications in an untrusted Cloud</title>
      <link>https://vahldiek.github.io/project/untrustedcloud/</link>
      <pubDate>Sat, 15 Dec 2018 00:24:42 +0100</pubDate>
      
      <guid>https://vahldiek.github.io/project/untrustedcloud/</guid>
      <description>Computing on secret data is challenging with today’s cloud service provider (CSP) offerings. CSP have full visibility into their client’s workloads and data while run in a VM or container and shielding against other tenants. On the contrary, confidential computing (CC) techniques (e.g., Intel Software Guard Extension (SGX)) offer a reverse sandbox. These techniques shield the workload and data from accesses by the underlying system software (e.g., OS or VMM) and hardware attacks.</description>
    </item>
    
  </channel>
</rss>