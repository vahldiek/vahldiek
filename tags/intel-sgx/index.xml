<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Intel SGX on Anjo Vahldiek-Oberwagner</title>
    <link>https://vahldiek.github.io/tags/intel-sgx/</link>
    <description>Recent content in Intel SGX on Anjo Vahldiek-Oberwagner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sat, 15 Dec 2018 00:24:42 +0100</lastBuildDate>
    
	<atom:link href="https://vahldiek.github.io/tags/intel-sgx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shielding Applications in an untrusted Cloud</title>
      <link>https://vahldiek.github.io/project/untrustedcloud/</link>
      <pubDate>Sat, 15 Dec 2018 00:24:42 +0100</pubDate>
      
      <guid>https://vahldiek.github.io/project/untrustedcloud/</guid>
      <description>Computing on secret data is challenging with today’s cloud service provider (CSP) offerings. CSP have full visibility into their client’s workloads and data while run in a VM or container and shielding against other tenants. On the contrary, confidential computing (CC) techniques (e.g., Intel Software Guard Extension (SGX)) offer a reverse sandbox. These techniques shield the workload and data from accesses by the underlying system software (e.g., OS or VMM) and hardware attacks.</description>
    </item>
    
  </channel>
</rss>